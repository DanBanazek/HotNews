@model BestCaseHotNews.Models.Post

@{
    ViewBag.Title = "Add New Article";
}

<h2>Create a New Post</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Post</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.productID, "Product")
        </div>
        <div class="editor-field">
            @Html.DropDownList("productID", String.Empty)
            @Html.ValidationMessageFor(model => model.productID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.categoryID, "Category")
        </div>
        <div class="editor-field">
            @Html.DropDownList("categoryID", String.Empty)
            @Html.ValidationMessageFor(model => model.categoryID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.userID, "User")
        </div>
        <div class="editor-field">
           @* @Html.DropDownList("userID", String.Empty)*@
            @Html.Label(@User.Identity.Name)
            @Html.HiddenFor(model => model.userName, new { @Value =User.Identity.Name})
            @Html.ValidationMessageFor(model => model.userName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.headline)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.headline)
            @Html.ValidationMessageFor(model => model.headline)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.body)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.body)
            @Html.ValidationMessageFor(model => model.body)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.datePosted)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.datePosted, DateTime.Now.ToString())
            @Html.ValidationMessageFor(model => model.datePosted)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.lastUpdate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.lastUpdate)
            @Html.ValidationMessageFor(model => model.lastUpdate)
        </div>
        <div class="editor-field">
        <label>Select or Add Tags for the Post</label>
            <div id="userSelectedTags">

            </div>
            <div>@Html.TextBox("tagsTB",String.Empty) <button id="tagAddBtn" onclick="return false;">+</button></div> 
            @* @Html.DropDownListFor(model => model.UserID, new SelectList(ViewBag.DDLRoles, "UserID", "UserName", Model.UserID)) *@
             @Html.ListBox("tagsPicked", (MultiSelectList)ViewBag.MultiSelectTags, new{ @class="multiSelect"})
            <p>Enter New tags separated by a comma: @Html.TextBox("newTags", String.Empty)</p>
            
        </div>
        <p>
            <input type="submit" value="Add a New Post" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
